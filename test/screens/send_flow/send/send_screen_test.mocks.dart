// Mocks generated by Mockito 5.3.0 from annotations
// in provenance_wallet/test/screens/send_flow/send/send_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:provenance_wallet/screens/send_flow/model/send_asset.dart'
    as _i4;
import 'package:provenance_wallet/screens/send_flow/send/send_bloc.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SendBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendBloc extends _i1.Mock implements _i2.SendBloc {
  MockSendBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i2.SendBlocState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: _i3.Stream<_i2.SendBlocState>.empty())
          as _i3.Stream<_i2.SendBlocState>);
  @override
  _i3.Future<void> load() => (super.noSuchMethod(Invocation.method(#load, []),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
  @override
  void showAllRecentSends() =>
      super.noSuchMethod(Invocation.method(#showAllRecentSends, []),
          returnValueForMissingStub: null);
  @override
  _i3.Future<String?> scanAddress() =>
      (super.noSuchMethod(Invocation.method(#scanAddress, []),
          returnValue: _i3.Future<String?>.value()) as _i3.Future<String?>);
  @override
  _i3.Future<void> next(String? address, _i4.SendAsset? asset) =>
      (super.noSuchMethod(Invocation.method(#next, [address, asset]),
              returnValue: _i3.Future<void>.value(),
              returnValueForMissingStub: _i3.Future<void>.value())
          as _i3.Future<void>);
}
