// Mocks generated by Mockito 5.3.0 from annotations
// in provenance_wallet/test/screens/home/accounts/accounts_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i10;

import 'package:mockito/mockito.dart' as _i1;
import 'package:provenance_dart/wallet.dart' as _i6;
import 'package:provenance_wallet/clients/multi_sig_client/models/multi_sig_signer.dart'
    as _i7;
import 'package:provenance_wallet/common/pw_design.dart' as _i9;
import 'package:provenance_wallet/services/account_service/account_service.dart'
    as _i2;
import 'package:provenance_wallet/services/models/account.dart' as _i5;
import 'package:provenance_wallet/util/local_auth_helper.dart' as _i8;
import 'package:rxdart/rxdart.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountServiceEvents_0 extends _i1.SmartFake
    implements _i2.AccountServiceEvents {
  _FakeAccountServiceEvents_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeValueStream_1<T> extends _i1.SmartFake
    implements _i3.ValueStream<T> {
  _FakeValueStream_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountService extends _i1.Mock implements _i2.AccountService {
  MockAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AccountServiceEvents get events =>
      (super.noSuchMethod(Invocation.getter(#events),
              returnValue:
                  _FakeAccountServiceEvents_0(this, Invocation.getter(#events)))
          as _i2.AccountServiceEvents);
  @override
  _i4.Future<_i5.Account?> getAccount(String? id) =>
      (super.noSuchMethod(Invocation.method(#getAccount, [id]),
              returnValue: _i4.Future<_i5.Account?>.value())
          as _i4.Future<_i5.Account?>);
  @override
  _i4.Future<_i5.Account?> selectFirstAccount() =>
      (super.noSuchMethod(Invocation.method(#selectFirstAccount, []),
              returnValue: _i4.Future<_i5.Account?>.value())
          as _i4.Future<_i5.Account?>);
  @override
  _i4.Future<_i5.TransactableAccount?> selectAccount({String? id}) =>
      (super.noSuchMethod(Invocation.method(#selectAccount, [], {#id: id}),
              returnValue: _i4.Future<_i5.TransactableAccount?>.value())
          as _i4.Future<_i5.TransactableAccount?>);
  @override
  _i4.Future<_i5.TransactableAccount?> getSelectedAccount() =>
      (super.noSuchMethod(Invocation.method(#getSelectedAccount, []),
              returnValue: _i4.Future<_i5.TransactableAccount?>.value())
          as _i4.Future<_i5.TransactableAccount?>);
  @override
  _i4.Future<List<_i5.Account>> getAccounts() =>
      (super.noSuchMethod(Invocation.method(#getAccounts, []),
              returnValue: _i4.Future<List<_i5.Account>>.value(<_i5.Account>[]))
          as _i4.Future<List<_i5.Account>>);
  @override
  _i4.Future<List<_i5.BasicAccount>> getBasicAccounts() => (super.noSuchMethod(
          Invocation.method(#getBasicAccounts, []),
          returnValue:
              _i4.Future<List<_i5.BasicAccount>>.value(<_i5.BasicAccount>[]))
      as _i4.Future<List<_i5.BasicAccount>>);
  @override
  _i4.Future<List<_i5.TransactableAccount>> getTransactableAccounts() =>
      (super.noSuchMethod(Invocation.method(#getTransactableAccounts, []),
              returnValue: _i4.Future<List<_i5.TransactableAccount>>.value(
                  <_i5.TransactableAccount>[]))
          as _i4.Future<List<_i5.TransactableAccount>>);
  @override
  _i4.Future<_i5.Account?> renameAccount({String? id, String? name}) =>
      (super.noSuchMethod(
              Invocation.method(#renameAccount, [], {#id: id, #name: name}),
              returnValue: _i4.Future<_i5.Account?>.value())
          as _i4.Future<_i5.Account?>);
  @override
  _i4.Future<_i5.Account?> addAccount(
          {List<String>? phrase, String? name, _i6.Coin? coin}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #addAccount, [], {#phrase: phrase, #name: name, #coin: coin}),
              returnValue: _i4.Future<_i5.Account?>.value())
          as _i4.Future<_i5.Account?>);
  @override
  _i4.Future<_i5.MultiAccount?> addMultiAccount(
          {String? name,
          _i6.Coin? coin,
          String? linkedAccountId,
          String? remoteId,
          int? cosignerCount,
          int? signaturesRequired,
          List<String>? inviteIds,
          List<_i7.MultiSigSigner>? signers}) =>
      (super.noSuchMethod(
              Invocation.method(#addMultiAccount, [], {
                #name: name,
                #coin: coin,
                #linkedAccountId: linkedAccountId,
                #remoteId: remoteId,
                #cosignerCount: cosignerCount,
                #signaturesRequired: signaturesRequired,
                #inviteIds: inviteIds,
                #signers: signers
              }),
              returnValue: _i4.Future<_i5.MultiAccount?>.value())
          as _i4.Future<_i5.MultiAccount?>);
  @override
  _i4.Future<_i5.MultiTransactableAccount?> activateMultiAccount(
          {String? id, List<_i7.MultiSigSigner>? signers}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #activateMultiAccount, [], {#id: id, #signers: signers}),
              returnValue: _i4.Future<_i5.MultiTransactableAccount?>.value())
          as _i4.Future<_i5.MultiTransactableAccount?>);
  @override
  _i4.Future<_i5.Account?> removeAccount({String? id}) =>
      (super.noSuchMethod(Invocation.method(#removeAccount, [], {#id: id}),
              returnValue: _i4.Future<_i5.Account?>.value())
          as _i4.Future<_i5.Account?>);
  @override
  _i4.Future<List<_i5.Account>> resetAccounts() =>
      (super.noSuchMethod(Invocation.method(#resetAccounts, []),
              returnValue: _i4.Future<List<_i5.Account>>.value(<_i5.Account>[]))
          as _i4.Future<List<_i5.Account>>);
  @override
  _i4.Future<_i6.PrivateKey?> loadKey(String? accountId) =>
      (super.noSuchMethod(Invocation.method(#loadKey, [accountId]),
              returnValue: _i4.Future<_i6.PrivateKey?>.value())
          as _i4.Future<_i6.PrivateKey?>);
  @override
  _i4.Future<bool> isValidWalletConnectData(String? qrData) => (super
      .noSuchMethod(Invocation.method(#isValidWalletConnectData, [qrData]),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [LocalAuthHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAuthHelper extends _i1.Mock implements _i8.LocalAuthHelper {
  MockLocalAuthHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ValueStream<_i8.AuthStatus> get status =>
      (super.noSuchMethod(Invocation.getter(#status),
              returnValue: _FakeValueStream_1<_i8.AuthStatus>(
                  this, Invocation.getter(#status)))
          as _i3.ValueStream<_i8.AuthStatus>);
  @override
  void reset() => super.noSuchMethod(Invocation.method(#reset, []),
      returnValueForMissingStub: null);
  @override
  _i4.Future<bool> enroll(String? code, String? accountName, bool? useBiometry,
          _i9.BuildContext? context) =>
      (super.noSuchMethod(
          Invocation.method(#enroll, [code, accountName, useBiometry, context]),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i8.AuthStatus> auth(_i9.BuildContext? context) =>
      (super.noSuchMethod(Invocation.method(#auth, [context]),
              returnValue:
                  _i4.Future<_i8.AuthStatus>.value(_i8.AuthStatus.noAccount))
          as _i4.Future<_i8.AuthStatus>);
  @override
  void didChangeAppLifecycleState(_i10.AppLifecycleState? state) => super
      .noSuchMethod(Invocation.method(#didChangeAppLifecycleState, [state]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<bool> didPopRoute() =>
      (super.noSuchMethod(Invocation.method(#didPopRoute, []),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> didPushRoute(String? route) =>
      (super.noSuchMethod(Invocation.method(#didPushRoute, [route]),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> didPushRouteInformation(
          _i9.RouteInformation? routeInformation) =>
      (super.noSuchMethod(
          Invocation.method(#didPushRouteInformation, [routeInformation]),
          returnValue: _i4.Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void didChangeMetrics() =>
      super.noSuchMethod(Invocation.method(#didChangeMetrics, []),
          returnValueForMissingStub: null);
  @override
  void didChangeTextScaleFactor() =>
      super.noSuchMethod(Invocation.method(#didChangeTextScaleFactor, []),
          returnValueForMissingStub: null);
  @override
  void didChangePlatformBrightness() =>
      super.noSuchMethod(Invocation.method(#didChangePlatformBrightness, []),
          returnValueForMissingStub: null);
  @override
  void didChangeLocales(List<_i10.Locale>? locales) =>
      super.noSuchMethod(Invocation.method(#didChangeLocales, [locales]),
          returnValueForMissingStub: null);
  @override
  void didHaveMemoryPressure() =>
      super.noSuchMethod(Invocation.method(#didHaveMemoryPressure, []),
          returnValueForMissingStub: null);
  @override
  void didChangeAccessibilityFeatures() =>
      super.noSuchMethod(Invocation.method(#didChangeAccessibilityFeatures, []),
          returnValueForMissingStub: null);
}
